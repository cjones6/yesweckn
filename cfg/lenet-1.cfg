# Copyright (c) 2019 Corinne Jones, Vincent Roulet, Zaid Harchaoui.
#
# This file is part of yesweckn. yesweckn provides an implementation
# of the CKNs used in the following paper:
#
# C. Jones, V. Roulet and Z. Harchaoui. Kernel-based Translations
# of Convolutional Networks. In arXiv, 2019.
#
# yesweckn is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# yesweckn is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with yesweckn.  If not, see <https://www.gnu.org/licenses/>.

[convolutional]
num_filters=4
patch_size=[5, 5]
stride=[1,1]
filters_init=spherical-k-means
subsample_factor=2
normalize=True
patch_kernel=linear
pool_kernel=average
pool_dim=[2,2]
pad=0

[convolutional]
num_filters=4
patch_size=[1, 1]
stride=[1,1]
filters_init=identity
subsample_factor=1
normalize=True
patch_kernel=rbf_sphere
pool_kernel=average
pool_dim=[1,1]
pad=0

[convolutional]
num_filters=12
patch_size=[5, 5]
stride=[1,1]
filters_init=spherical-k-means
subsample_factor=2
normalize=True
patch_kernel=linear
pool_kernel=average
pool_dim=[2,2]
pad=0

[convolutional]
num_filters=12
patch_size=[1, 1]
stride=[1,1]
filters_init=identity
subsample_factor=1
normalize=True
patch_kernel=rbf_sphere
pool_kernel=average
pool_dim=[1,1]
pad=0